Create components:
    a) login status
    b) login
    c) register
    d) report period selector
    e) reports list (with totals)
    f) report detail container
        f1) detail controls
        f2) chart
        f3) table
        f4) report title
    g) report detail

create admin tables:
    1) user
    2) user-types
    3) store-owner
    4) payments
    5) subscription-status
    6) migration-status



var demoApp = angular.module('demoApp', []);

function uuidv4() {
  return ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, c =>
    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
  )
}

//generic coding object that references all coding objects
function Object(Type) {
   this.objectData = new Type();
}
Object.prototype.getProperty = function(name) {
	return this.objectData.typeProperties[name].data;
}

//used to "dynanically type access type-based properties from an object instance"
function ObjectType() {
	this.typeProperties = [];
  this.typePropertyNames = []; 
  this.addTypeProperty('title','string', 'ObjectType');
  this.addTypeProperty('uuid','GUID', uuidv4()); 
}
ObjectType.prototype.addTypeProperty = function(name,type,data) {
	this.typePropertyNames += name;
  this.typeProperties += new ObjectTypeProperty(name,type,data);
}

function ObjectTypeProperty(name,dataType,defaultData={}) {
	this.name = name;
  this.dataType = dataType;
  this.data = defaultData;
}

function ClientUIElement() {
	
}

function ClientView {

}
ClientView.prototype.parentType = 

function ObjectProperti

function ObjectTypeInfo(var name) {
	this.uuid = uuidv4();
  this.type = "element";
  this.name = name;
}

function ObjectType(typeName) {
	this.typeInfo = new ObjectTypeInfo(typeName)
  this.properties = [];
}

ObjectType.prototype.addProperty = function(property) {
	this.properties.push(property);
};

function ObjectTypeDataProperty() {
	this.
}

// create angular controller
demoApp.controller("demoController", ["$scope",
  function($scope) {
  	$scope.currentJobIndex = 0;
    $scope.jobs = [];
    $scope.jobs.push(new)
    "Job 1", "Job 2", "Job 3", "Job 4", "Job 5"];
    $scope.showNext = function(index) {
      $scope.currentJobIndex = ++index;
    };
    $scope.hideThis = function(index) {
      $scope.currentJobIndex = --index;
    };
  }
]);
